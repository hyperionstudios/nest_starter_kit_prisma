var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.472,1,1.685]],["body/controllers/AppController.html",[0,2.083,1,2.384,2,1.581,3,0.74,4,0.74,5,0.557,6,2.481,7,0.74,8,2.384,9,3.883,10,2.097,11,0.047,12,1.227,13,3.063,14,1.81,15,2.083,16,0.975,17,0.958,18,2.048,19,2.481,20,0.74,21,0.328,22,2.481,23,3.063,24,1.81,25,3.063,26,0.035,27,0.035]],["title/modules/AppModule.html",[28,1.295,29,1.685]],["body/modules/AppModule.html",[1,2.188,2,1.611,3,0.512,4,0.512,5,0.567,11,0.048,16,1.137,17,0.663,18,2.067,19,1.716,20,0.512,21,0.227,26,0.027,27,0.027,28,1.976,29,2.962,30,0.962,31,1.25,32,1.716,33,1.716,34,1.716,35,2.35,36,2.35,37,1.844,38,1.253,39,1.253,40,2.12,41,2.136,42,2.527,43,2.12,44,1.253,45,2.136,46,2.12,47,2.12,48,2.12,49,2.12,50,2.998,51,1.716,52,2.12,53,2.12,54,2.12,55,1.451,56,1.716,57,2.12,58,2.12,59,2.12,60,2.12,61,1.716]],["title/injectables/AppService.html",[18,1.295,62,1.143]],["body/injectables/AppService.html",[3,0.795,4,0.795,5,0.598,7,0.795,8,2.498,9,3.991,11,0.046,12,1.318,14,1.944,15,2.182,16,0.795,17,1.029,18,1.919,20,0.795,21,0.352,24,1.944,26,0.036,27,0.036,62,1.694,63,1.944,64,2.664,65,3.29,66,3.29,67,3.29]],["title/controllers/AuthController.html",[0,1.472,68,1.685]],["body/controllers/AuthController.html",[0,1.918,2,1.918,3,0.897,4,0.897,5,0.676,11,0.045,16,0.897,17,1.162,20,0.897,21,0.398,26,0.039,27,0.039,68,2.696,69,3.009,70,3.715,71,2.543,72,3.715]],["title/modules/AuthModule.html",[28,1.295,35,1.472]],["body/modules/AuthModule.html",[2,1.977,3,0.684,4,0.684,5,0.515,11,0.047,16,1.122,17,0.886,20,0.684,21,0.303,26,0.033,27,0.033,28,1.738,30,1.286,31,1.534,35,2.582,37,2.263,38,1.674,39,1.674,41,2.621,42,2.294,68,2.563,73,2.294,74,2.294,75,2.582,76,2.832,77,2.832,78,1.939,79,2.832,80,2.832,81,2.832]],["title/injectables/AuthService.html",[62,1.143,75,1.472]],["body/injectables/AuthService.html",[3,0.252,4,0.252,5,0.19,7,0.252,8,1.048,11,0.048,12,1.332,14,2.095,15,2.393,16,0.856,17,0.326,20,0.252,21,0.112,24,1.048,26,0.015,27,0.015,44,0.616,55,1.583,56,1.436,62,0.71,63,0.616,75,0.915,78,0.714,82,0.845,83,3.649,84,1.773,85,2.727,86,1.773,87,1.773,88,1.773,89,1.436,90,1.043,91,1.238,92,2.209,93,1.583,94,2.727,95,1.043,96,2.275,97,1.964,98,1.509,99,2.692,100,1.436,101,1.773,102,2.555,103,1.043,104,1.773,105,1.867,106,1.773,107,1.773,108,1.436,109,1.773,110,1.773,111,4.029,112,1.773,113,1.773,114,1.773,115,1.773,116,1.773,117,3.324,118,2.727,119,1.773,120,1.043,121,1.773,122,1.773,123,1.773,124,1.773,125,3.324,126,1.043,127,3.324,128,1.773,129,1.806,130,1.043,131,1.773,132,1.964,133,1.043,134,1.043,135,1.436,136,1.043,137,1.043,138,2.312,139,3.324,140,1.436,141,1.043,142,1.043,143,0.845,144,1.773,145,1.043,146,1.773,147,1.773,148,1.773,149,1.043,150,1.773,151,2.727,152,1.773,153,1.773,154,1.043,155,1.043,156,1.043,157,1.043]],["title/classes/FileUtil.html",[21,0.306,158,1.952]],["body/classes/FileUtil.html",[3,0.563,4,0.563,5,0.711,7,0.563,11,0.048,12,1.34,16,0.563,20,0.563,21,0.25,24,1.378,26,0.029,27,0.029,61,1.889,97,1.976,143,3.166,158,2.289,159,1.378,160,1.889,161,1.726,162,4.706,163,3.91,164,3.91,165,2.708,166,2.708,167,2.332,168,2.332,169,2.332,170,2.332,171,3.344,172,3.344,173,2.332,174,2.332,175,2.332,176,2.332,177,2.332,178,2.332,179,2.332,180,3.344,181,2.332,182,2.332,183,2.332,184,2.332,185,2.332,186,2.332,187,2.332,188,2.332,189,2.332,190,2.332,191,2.332,192,2.332]],["title/modules/PrismaModule.html",[28,1.295,36,1.472]],["body/modules/PrismaModule.html",[3,0.696,4,0.696,5,0.524,11,0.046,16,0.936,17,0.901,20,0.696,21,0.309,26,0.033,27,0.033,28,1.759,30,1.309,31,1.553,36,2.652,37,2.29,38,1.703,39,1.703,41,2.652,91,2.467,193,2.334,194,2.334,195,2.334,196,2.882,197,3.875,198,3.875,199,2.882]],["title/injectables/PrismaService.html",[62,1.143,91,1.295]],["body/injectables/PrismaService.html",[3,0.563,4,0.563,5,0.424,7,0.563,8,1.976,11,0.048,12,1.567,14,1.976,16,0.944,17,0.729,20,0.563,21,0.25,22,1.889,26,0.029,27,0.029,44,1.378,55,2.289,62,1.34,63,1.378,83,3.811,89,1.889,91,1.518,92,3.459,96,1.596,97,1.378,98,1.059,99,1.889,140,2.708,200,1.889,201,3.344,202,3.91,203,4.706,204,4.706,205,2.332,206,2.332,207,2.332,208,2.332,209,1.889,210,2.332,211,2.332,212,2.332,213,2.332,214,2.332,215,2.332,216,2.332,217,2.332]],["title/classes/SignInDto.html",[21,0.306,132,1.685]],["body/classes/SignInDto.html",[3,0.709,4,0.709,5,0.534,7,0.709,10,2.684,11,0.046,12,1.571,15,2.433,16,0.709,20,0.709,21,0.42,26,0.034,27,0.034,98,1.78,102,3.023,132,2.317,159,1.734,161,2.024,218,2.376,219,3.023,220,2.376,221,2.934,222,2.376,223,2.934,224,3.175,225,3.576,226,3.576,227,2.376,228,2.009,229,2.376]],["title/classes/SignUpDto.html",[21,0.306,129,1.685]],["body/classes/SignUpDto.html",[3,0.601,4,0.601,5,0.452,7,0.601,10,2.396,11,0.046,12,1.402,15,2.269,16,0.601,20,0.601,21,0.375,26,0.03,27,0.03,96,2.396,97,2.598,98,1.589,102,2.772,129,2.068,159,1.469,161,1.807,219,2.772,220,2.013,222,2.013,224,2.834,225,3.28,226,3.28,227,2.013,228,1.702,229,2.013,230,2.013,231,1.702,232,3.5,233,3.5,234,2.396,235,3.5,236,3.5,237,3.5,238,3.5,239,3.5,240,2.834,241,2.486,242,2.486]],["title/coverage.html",[243,3.115]],["body/coverage.html",[0,1.781,1,1.44,5,0.443,6,1.973,11,0.046,18,1.106,21,0.429,26,0.03,27,0.03,45,1.668,62,1.605,64,1.973,68,1.44,69,1.973,75,1.258,82,1.973,91,1.106,98,1.106,129,1.44,132,1.44,158,1.668,160,1.973,200,1.973,218,1.973,230,1.973,234,1.668,243,1.973,244,2.437,245,2.437,246,2.437,247,1.973,248,4.006,249,1.973,250,5.231,251,4.775,252,1.973,253,1.973,254,1.973,255,1.973,256,3.451,257,1.973,258,3.451,259,2.437,260,2.437,261,3.451,262,2.437,263,2.437,264,1.973,265,1.973,266,2.437,267,2.437,268,2.437]],["title/dependencies.html",[31,1.37,269,1.947]],["body/dependencies.html",[11,0.048,17,0.842,21,0.396,26,0.032,27,0.032,31,1.079,44,1.591,51,2.18,78,1.843,93,1.843,135,2.18,209,2.18,228,1.843,270,2.692,271,2.692,272,4.549,273,2.692,274,2.692,275,2.692,276,2.692,277,2.692,278,3.699,279,2.692,280,2.692,281,2.692,282,2.692,283,2.692,284,2.692,285,2.692,286,2.692,287,2.18,288,2.692,289,3.699,290,2.692,291,2.692,292,2.692,293,2.692,294,2.692,295,2.692,296,2.692,297,2.692,298,2.692,299,2.692,300,2.692,301,2.692]],["title/miscellaneous/functions.html",[302,1.092,303,2.768]],["body/miscellaneous/functions.html",[7,0.933,11,0.04,26,0.04,27,0.04,255,3.128,257,4.066,264,3.128,265,4.066,302,1.753,303,3.128,304,3.862,305,3.862]],["title/index.html",[7,0.581,306,1.947,307,1.947]],["body/index.html",[5,0.484,11,0.036,26,0.031,27,0.031,50,4.401,71,2.513,93,1.823,100,3.402,105,1.823,108,2.156,240,2.156,287,2.156,308,1.823,309,2.513,310,2.663,311,3.671,312,2.663,313,2.663,314,2.663,315,2.663,316,2.663,317,2.663,318,2.973,319,2.663,320,2.663,321,2.663,322,2.663,323,2.663,324,2.663,325,2.663,326,2.663,327,2.663,328,2.663,329,4.201,330,3.671,331,2.663,332,3.671,333,2.663,334,2.663,335,3.671,336,2.663,337,2.663,338,2.663,339,2.663,340,2.663,341,2.663,342,2.663,343,2.663]],["title/modules.html",[30,1.747]],["body/modules.html",[11,0.039,26,0.039,27,0.039,29,2.229,30,1.713,35,1.948,36,1.948,344,4.97,345,4.97,346,4.97,347,4.97]],["title/overview.html",[348,3.115]],["body/overview.html",[2,1.445,11,0.044,18,1.958,26,0.033,27,0.033,29,3.066,30,1.271,31,1.522,32,2.267,33,2.267,34,2.267,35,2.496,36,2.574,37,2.245,38,1.655,39,1.655,63,1.655,73,2.267,74,2.267,75,2.226,91,2.315,159,1.655,193,2.267,194,2.267,195,2.267,348,2.267,349,4.312,350,2.8]],["title/properties.html",[161,1.764,269,1.947]],["body/properties.html",[11,0.046,26,0.039,27,0.039,31,1.478,161,1.903,231,2.524,308,2.524,309,2.524,351,3.687,352,3.687,353,2.986,354,3.687,355,3.687,356,3.687,357,3.687,358,3.687,359,3.687,360,3.687]],["title/todo.html",[306,1.947,307,1.947,361,2.405]],["body/todo.html",[11,0.047,26,0.039,27,0.039,71,3.108,318,2.986,362,3.677,363,4.92,364,3.687,365,4.541,366,3.687]],["title/miscellaneous/typealiases.html",[302,1.092,367,3.418]],["body/miscellaneous/typealiases.html",[7,0.956,11,0.041,26,0.041,27,0.041,98,2.151,105,3.244,302,1.796,368,3.956,369,3.956,370,3.956,371,3.956]],["title/miscellaneous/variables.html",[302,1.092,372,2.768]],["body/miscellaneous/variables.html",[7,0.68,11,0.046,26,0.033,27,0.033,45,2.611,165,3.502,166,3.502,219,1.928,231,1.928,234,1.928,247,2.28,249,3.089,252,2.28,253,2.28,254,3.089,302,1.278,308,1.928,309,2.611,353,3.089,362,3.502,372,2.28,373,2.816,374,2.816,375,2.816,376,2.816,377,2.816,378,2.816,379,2.816,380,2.816,381,2.816,382,2.816,383,2.816,384,2.816,385,2.816,386,2.816,387,2.816,388,2.816,389,2.816,390,2.816,391,2.816,392,2.816,393,2.816,394,2.816,395,2.816]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":352,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["16).tostring(16",{"_index":189,"title":{},"body":{"classes/FileUtil.html":{}}}],["2",{"_index":350,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["3",{"_index":349,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["3.12.0",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.0",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["4.8.2",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.2.0",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":232,"title":{},"body":{"classes/SignUpDto.html":{}}}],["addbearerauth",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ahmad",{"_index":359,"title":{},"body":{"properties.html":{}}}],["aliases",{"_index":368,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":178,"title":{},"body":{"classes/FileUtil.html":{}}}],["alsodani",{"_index":360,"title":{},"body":{"properties.html":{}}}],["api",{"_index":362,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":339,"title":{},"body":{"index.html":{}}}],["array(4",{"_index":185,"title":{},"body":{"classes/FileUtil.html":{}}}],["async",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["auth",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"todo.html":{}}}],["auth.controller",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":68,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":358,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":75,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["based",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.hash(data",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["browse",{"_index":347,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":344,"title":{},"body":{"modules.html":{}}}],["build",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bull",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bullmodule.forroot",{"_index":383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":172,"title":{},"body":{"classes/FileUtil.html":{}}}],["callback(new",{"_index":174,"title":{},"body":{"classes/FileUtil.html":{}}}],["callback(null",{"_index":180,"title":{},"body":{"classes/FileUtil.html":{}}}],["class",{"_index":21,"title":{"classes/FileUtil.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":159,"title":{},"body":{"classes/FileUtil.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":193,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":195,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":194,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["compdoc",{"_index":341,"title":{},"body":{"index.html":{}}}],["compose",{"_index":331,"title":{},"body":{"index.html":{}}}],["config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":215,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config/.../files.config.ts",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../queue.config.ts",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../swagger.config.ts",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/files.config.ts",{"_index":247,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/queue.config",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["config/queue.config.ts",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/swagger.config.ts",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["configured",{"_index":355,"title":{},"body":{"properties.html":{}}}],["console.log(randomname",{"_index":191,"title":{},"body":{"classes/FileUtil.html":{}}}],["const",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"classes/FileUtil.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":205,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(prisma",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["coverage",{"_index":243,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["datasources",{"_index":212,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":213,"title":{},"body":{"injectables/PrismaService.html":{}}}],["decoration",{"_index":321,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["default",{"_index":165,"title":{},"body":{"classes/FileUtil.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{},"properties.html":{}}}],["deploy",{"_index":328,"title":{},"body":{"index.html":{}}}],["description",{"_index":231,"title":{},"body":{"classes/SignUpDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diskstorage",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docker",{"_index":330,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":327,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["editfilename",{"_index":163,"title":{},"body":{"classes/FileUtil.html":{}}}],["email",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["empty",{"_index":336,"title":{},"body":{"index.html":{}}}],["env",{"_index":333,"title":{},"body":{"index.html":{}}}],["error('only",{"_index":175,"title":{},"body":{"classes/FileUtil.html":{}}}],["etc",{"_index":238,"title":{},"body":{"classes/SignUpDto.html":{}}}],["example",{"_index":334,"title":{},"body":{"index.html":{}}}],["expire",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["exports",{"_index":197,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":201,"title":{},"body":{"injectables/PrismaService.html":{}}}],["extname",{"_index":169,"title":{},"body":{"classes/FileUtil.html":{}}}],["extname(file.originalname",{"_index":183,"title":{},"body":{"classes/FileUtil.html":{}}}],["false",{"_index":179,"title":{},"body":{"classes/FileUtil.html":{}}}],["features",{"_index":312,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"index.html":{}}}],["file.originalname.match(/\\.(jpg|jpeg|png|gif",{"_index":173,"title":{},"body":{"classes/FileUtil.html":{}}}],["file.originalname.split('.')[0",{"_index":181,"title":{},"body":{"classes/FileUtil.html":{}}}],["fileextname",{"_index":182,"title":{},"body":{"classes/FileUtil.html":{}}}],["filename",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":177,"title":{},"body":{"classes/FileUtil.html":{}}}],["fileuploadconfig",{"_index":249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileutil",{"_index":158,"title":{"classes/FileUtil.html":{}},"body":{"classes/FileUtil.html":{},"coverage.html":{}}}],["fileutil.editfilename",{"_index":382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(null",{"_index":186,"title":{},"body":{"classes/FileUtil.html":{}}}],["first",{"_index":236,"title":{},"body":{"classes/SignUpDto.html":{}}}],["function",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":303,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokens",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokens(userid",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":306,"title":{"index.html":{},"todo.html":{}},"body":{}}],["global",{"_index":198,"title":{},"body":{"modules/PrismaModule.html":{}}}],["guards",{"_index":365,"title":{},"body":{"todo.html":{}}}],["hash",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":287,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["host",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":176,"title":{},"body":{"classes/FileUtil.html":{}}}],["imagefilefilter",{"_index":164,"title":{},"body":{"classes/FileUtil.html":{}}}],["implemented",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["implements",{"_index":210,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["included",{"_index":335,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["isemail",{"_index":224,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isglobal",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":225,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isstring",{"_index":226,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isstring()@isemail()@isnotempty",{"_index":220,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isstring()@minlength(8)@isnotempty",{"_index":222,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["join",{"_index":190,"title":{},"body":{"classes/FileUtil.html":{}}}],["jwt",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["jwtmodule",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["kafka",{"_index":340,"title":{},"body":{"index.html":{}}}],["kit",{"_index":353,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":237,"title":{},"body":{"classes/SignUpDto.html":{}}}],["license",{"_index":356,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":317,"title":{},"body":{"index.html":{}}}],["login",{"_index":314,"title":{},"body":{"index.html":{}}}],["mailer",{"_index":326,"title":{},"body":{"index.html":{}}}],["main",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":187,"title":{},"body":{"classes/FileUtil.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":188,"title":{},"body":{"classes/FileUtil.html":{}}}],["metadata",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["minlength",{"_index":227,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(8",{"_index":229,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":302,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":357,"title":{},"body":{"properties.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["multer",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":313,"title":{},"body":{"index.html":{}}}],["name",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/FileUtil.html":{},"injectables/PrismaService.html":{},"classes/SignUpDto.html":{}}}],["needed",{"_index":240,"title":{},"body":{"classes/SignUpDto.html":{},"index.html":{}}}],["nestjs",{"_index":308,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["nestjs/bull",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":234,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":342,"title":{},"body":{"index.html":{}}}],["onmoduledestroy",{"_index":203,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":204,"title":{},"body":{"injectables/PrismaService.html":{}}}],["openapi",{"_index":324,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["orm",{"_index":311,"title":{},"body":{"index.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["overview",{"_index":348,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":269,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/SignUpDto.html":{}}}],["parseint(process.env.redis_port",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":219,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":170,"title":{},"body":{"classes/FileUtil.html":{}}}],["permission",{"_index":319,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":364,"title":{},"body":{"todo.html":{}}}],["port",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pre",{"_index":354,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["prisma",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["prisma.service",{"_index":199,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/.../seed.ts",{"_index":305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prisma/client",{"_index":209,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/seed.ts",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaclient",{"_index":202,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":36,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":91,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.redis_host",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_password",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.all",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":161,"title":{"properties.html":{}},"body":{"classes/FileUtil.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"properties.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{}}}],["public/uploads",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queueconfig",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["queueing",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["queues",{"_index":323,"title":{},"body":{"index.html":{}}}],["randomname",{"_index":184,"title":{},"body":{"classes/FileUtil.html":{}}}],["randomname}${fileextname",{"_index":192,"title":{},"body":{"classes/FileUtil.html":{}}}],["rbac",{"_index":320,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["ready",{"_index":329,"title":{},"body":{"index.html":{}}}],["redis",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["refresh_token",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens(userid",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":235,"title":{},"body":{"classes/SignUpDto.html":{}}}],["req",{"_index":171,"title":{},"body":{"classes/FileUtil.html":{}}}],["required",{"_index":233,"title":{},"body":{"classes/SignUpDto.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["rimraf",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":366,"title":{},"body":{"todo.html":{}}}],["roles",{"_index":318,"title":{},"body":{"index.html":{},"todo.html":{}}}],["router",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["script",{"_index":343,"title":{},"body":{"index.html":{}}}],["secret",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["seeder",{"_index":325,"title":{},"body":{"index.html":{}}}],["services",{"_index":332,"title":{},"body":{"index.html":{}}}],["sessions",{"_index":315,"title":{},"body":{"index.html":{}}}],["set",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["setdescription('the",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('nestjs",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["setversion('1.0",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signindto",{"_index":132,"title":{"classes/SignInDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signinlocal",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinlocal(signupdto",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto",{"_index":129,"title":{"classes/SignUpDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signuplocal",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["signuplocal(signindto",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/FileUtil.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["src/.../main.ts",{"_index":304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tokens.type.ts",{"_index":369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:21",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:60",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:65",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/signin.dto.ts",{"_index":218,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts:12",{"_index":223,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:7",{"_index":221,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signup.dto.ts",{"_index":230,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup.dto.ts:12",{"_index":241,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dto/signup.dto.ts:17",{"_index":242,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/common/types",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/types/tokens.type.ts",{"_index":370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/common/util/file.util.ts",{"_index":160,"title":{},"body":{"classes/FileUtil.html":{},"coverage.html":{}}}],["src/common/util/file.util.ts:11",{"_index":167,"title":{},"body":{"classes/FileUtil.html":{}}}],["src/common/util/file.util.ts:4",{"_index":168,"title":{},"body":{"classes/FileUtil.html":{}}}],["src/main.ts",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":196,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":200,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:18",{"_index":207,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:21",{"_index":208,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":206,"title":{},"body":{"injectables/PrismaService.html":{}}}],["started",{"_index":307,"title":{"index.html":{},"todo.html":{}},"body":{}}],["starter",{"_index":309,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":162,"title":{},"body":{"classes/FileUtil.html":{}}}],["storage",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["sub",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":211,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":345,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":346,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["swaggerconfig",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":310,"title":{},"body":{"index.html":{}}}],["tests",{"_index":363,"title":{},"body":{"todo.html":{}}}],["this.$connect",{"_index":217,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":216,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.config.get('access_token_secret",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.get('refresh_token_secret",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwt.signasync",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":361,"title":{"todo.html":{}},"body":{}}],["token",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tracking",{"_index":316,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/FileUtil.html":{}}}],["type",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":367,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["up",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["upload",{"_index":322,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":214,"title":{},"body":{"injectables/PrismaService.html":{}}}],["used",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":239,"title":{},"body":{"classes/SignUpDto.html":{}}}],["validator",{"_index":228,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"dependencies.html":{}}}],["value",{"_index":166,"title":{},"body":{"classes/FileUtil.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":337,"title":{},"body":{"index.html":{}}}],["variable",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":372,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":351,"title":{},"body":{"properties.html":{}}}],["want",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["websockets",{"_index":338,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { queueConfig } from 'config/queue.config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\n\n// setup bull module for queueing\n// setup multer for file uploads\n// setup config module\n// set up router module\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    queueConfig,\n    PrismaModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTokens\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                signInLocal\n                            \n                            \n                                    Async\n                                signUpLocal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, config: ConfigService, jwt: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTokens(userID: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n                    Generate Tokens both access and refresh token\nbased on user id and user email\nset the expire time to whatever you want\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                    \n                    hash(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n                    Hash a String, used for passwords\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(userId: string, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    to be implemented by the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signInLocal\n                        \n                    \n                \n            \n            \n                \n                    \n                    signInLocal(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:65\n                \n            \n\n\n            \n                \n                    to be implemented by the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUpLocal\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpLocal(signInDto: SignInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    to be implemented by the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { Tokens } from 'src/common/types';\nimport { SignInDto, SignUpDto } from './dto';\n@Injectable()\nexport class AuthService {\n    constructor(\n        private prisma: PrismaService,\n        private config: ConfigService,\n        private jwt: JwtService,\n    ) { }\n\n    /**\n     * Hash a String, used for passwords\n     * @param data \n     * @returns \n     */\n    async hash(data: string): Promise {\n        return await bcrypt.hash(data, 10);\n    }\n\n    /**\n     * Generate Tokens both access and refresh token \n     * based on user id and user email\n     * set the expire time to whatever you want\n     * @param userID \n     * @param email \n     * @returns {Tokens}\n     */\n    async generateTokens(userID: string, email: string): Promise {\n        const [accessToken, refreshToken] = await Promise.all([\n            this.jwt.signAsync({\n                sub: userID,\n                email,\n            }, {\n                secret: this.config.get('ACCESS_TOKEN_SECRET'),\n                expiresIn: 60 * 60 * 24 * 7,\n            }),\n            this.jwt.signAsync({\n                sub: userID,\n                email,\n            }, {\n                secret: this.config.get('REFRESH_TOKEN_SECRET'),\n                expiresIn: 60 * 60 * 24 * 7 * 4,\n            }),\n        ]);\n        return {\n            access_token: accessToken,\n            refresh_token: refreshToken,\n        }\n    }\n\n    /**\n     * to be implemented by the user\n     * @param signInDto \n     */\n    async signUpLocal(signInDto: SignInDto) { }\n\n    /**\n     * to be implemented by the user\n     */\n    async signInLocal(signUpDto: SignUpDto) { }\n\n    /**\n     * to be implemented by the user\n     * @param userId \n     * @param refreshToken \n     */\n    async refreshTokens(userId: string, refreshToken: string) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUtil.html":{"url":"classes/FileUtil.html","title":"class - FileUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/file.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                editFileName\n                            \n                            \n                                    Static\n                                imageFileFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/common/util/file.util.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/common/util/file.util.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { extname } from \"path\";\n\nexport class FileUtil {\n    static imageFileFilter = (req, file, callback) => {\n        if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)) {\n            return callback(new Error('Only image files are allowed!'), false);\n        }\n        callback(null, true);\n    }\n\n    static editFileName = (req, file, callback) => {\n        const name = file.originalname.split('.')[0];\n        const fileExtName = extname(file.originalname);\n        const randomName = Array(4)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n        console.log(randomName);\n        callback(null, `${name}-${randomName}${fileExtName}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n\n    constructor(private config: ConfigService) {\n        super({\n            datasources: {\n                db: {\n                    url: config.get('DATABASE_URL'),\n                }\n            }\n        });\n    }\n\n    async onModuleDestroy() {\n        await this.$disconnect();\n    }\n    async onModuleInit() {\n        await this.$connect();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class SignInDto {\n    @IsString()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsString()\n    @MinLength(8)\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Add any other required parameters for\nnew registration like first name last name etc\nwith validation as needed\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\n/**\n * Add any other required parameters for\n * new registration like first name last name etc \n * with validation as needed\n */\nexport class SignUpDto {\n    @IsString()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsString()\n    @MinLength(8)\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/files.config.ts\n            \n            variable\n            fileUploadConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/queue.config.ts\n            \n            variable\n            queueConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/auth/dto/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/signup.dto.ts\n            \n            class\n            SignUpDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/util/file.util.ts\n            \n            class\n            FileUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/bull : ^0.5.4\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.12.0\n        \n            bcrypt : ^5.0.1\n        \n            bull : ^4.8.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            helmet : ^5.0.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS Starter Template (with prisma orm)\nFeatures\n\n JWT Auth (with refresh tokens and multi login sessions tracking) setup, local auth setup\n Roles & Permission\n RBAC \n Roles Decoration\n\n\n File Upload setup\n Queues Setup\n OpenApi Setup\n Prisma ORM Setup\n Prisma Seeder Setup\n helmet setup\n Mailer setup\n Dockerfile setup - deploy ready\n docker-compose setup with all needed services\n.env-example included with empty values\n websockets ready\n argon2 setup\nkafka included in docker services (not in starter but ready to setup)\n compdoc setup and npm script\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : A NestJS Starter Kit with pre-configured dependencies\n        \n            License : MIT\n        \n            Author : Ahmad Alsodani\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n[ ] Auth API - with tests\n[ ] Roles & Permissions API - with tests\n[ ] Auth Guards with Role Guards - with tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Tokens   (src/.../tokens.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/types/tokens.type.ts\n    \n    \n        \n            \n                \n                    \n                    Tokens\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fileUploadConfig   (config/.../files.config.ts)\n                        \n                        \n                            queueConfig   (config/.../queue.config.ts)\n                        \n                        \n                            swaggerConfig   (config/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/files.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileUploadConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : MulterModule.register({\n    storage: diskStorage({\n        destination: \"./public/uploads\",\n        filename: FileUtil.editFileName,\n    }),\n})\n                    \n                \n\n\n        \n    \n\n    config/queue.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        queueConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BullModule.forRoot({\n    redis: {\n        host: process.env.REDIS_HOST,\n        port: parseInt(process.env.REDIS_PORT),\n        password: process.env.REDIS_PASSWORD,\n    }\n})\n                    \n                \n\n\n        \n    \n\n    config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n    .setTitle('NestJS API Starter Kit')\n    .setDescription('The NestJS API Starter Kit API description')\n    .setVersion('1.0')\n    .addBearerAuth()\n    .build()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
